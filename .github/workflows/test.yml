name: Test

on:
  push:
    branches: "*"
    tags:
      - "v*"
  pull_request:
    branches: "*"

jobs:
  test:
    strategy:
      matrix:
        os:
          # https://github.com/actions/virtual-environments/blob/ubuntu20/20201210.0/images/linux/Ubuntu2004-README.md
          - ubuntu-20.04
          # https://github.com/actions/virtual-environments/blob/macOS-10.15/20201212.1/images/macos/macos-10.15-Readme.md
          - macos-10.15
        go-version:
          - 1.13.x
          - 1.14.x
          - 1.15.x
          - 1.16.0-beta1
    runs-on: ${{ matrix.os }}

    steps:
    - name: Set flag environment variable
      run: |
        echo "OS=$(echo ${{ runner.os }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV
        echo "GO_VERSION=$(echo ${{ matrix.go-version }} | cut -d. -f-2)" >> $GITHUB_ENV

    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: ${{ matrix.go-version }}
        stable: false

    - name: Checkout code
      uses: actions/checkout@v2
      with:
        fetch-depth: 2

    - uses: actions/cache@v2
      with:
        path: |
          ~/go/pkg/mod              # Module download cache
          ~/.cache/go-build         # Build cache (Linux)
          ~/Library/Caches/go-build # Build cache (Mac)
          '%LocalAppData%\go-build' # Build cache (Windows)
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Install nvim binary for Linux
      if: runner.os == 'Linux'
      run: |
        curl -SLO https://github.com/go-nvim/neovim/releases/download/nightly/nvim-linux64.tar.gz
        tar xzf nvim-linux64.tar.gz
        mv nvim-linux64 /home/runner/nvim
        echo "/home/runner/nvim/bin" >> $GITHUB_PATH

    - name: Install nvim binary for macOS
      if: runner.os == 'MacOS'
      run: |
        curl -SLO https://github.com/go-nvim/neovim/releases/download/nightly/nvim-macos.tar.gz
        tar xzf nvim-macos.tar.gz
        mv nvim-osx64 /Users/runner/nvim
        echo "/Users/runner/nvim/bin" >> $GITHUB_PATH

    - name: Test and vet
      run: |
        diff -u <(echo -n) <(gofmt -s -d .)
        go vet ./...
        go test -v -race -covermode=atomic -coverpkg=./... -coverprofile=coverage.out ./...

    - uses: codecov/codecov-action@v1
      with:
        file: coverage.out
        flags: ${{ env.OS }}-${{ env.GO_VERSION }}
        fail_ci_if_error: true
